#!/bin/bash -l

set -e

app=freeswitch
user=$app

if [ -f /etc/default/$app ]
then
    . /etc/default/$app
fi

# options: 
# debug info notice warning err crit alert console
: ${FREESWITCH_LOG_LEVEL:=info}
: ${FREESWITCH_LOG_COLOR:=true}

# RTP port range settings
: ${FREESWITCH_RTP_START_PORT:=16384}
: ${FREESWITCH_RTP_END_PORT:=32768}

: ${MOD_KAZOO_LISTEN_IP:=0.0.0.0}

# if true, sets -nonat flat on freeswitch
: ${FREESWITCH_DISABLE_NAT_DETECTION:=true}

: ${FREESWITCH_SEND_ALL_HEADERS:=true}

# These settings determine event socket settings
: ${FREESWITCH_EVENT_SOCKET_LISTEN_IP:=127.0.0.1}
# if set, will password protect fs_cli
# if blank, will comment out the password tag
: ${FREESWITCH_EVENT_SOCKET_PASSWORD:=}

# settings for sipcapture
: ${FREESWITCH_CAPTURE_SERVER:=false}
: ${FREESWITCH_CAPTURE_IP:=127.0.0.1}

# Enable TLS here
: ${FREESWITCH_ENABLE_TLS:=false}

function log 
{
    local msg="$1"
    echo -e "\E[36m[*]\E[0m ${msg}" 
}

function errlog
{
    local msg="$1"
    echo -e "\E[31m[x]\E[0m ${msg}" >&2
}

# If sounds havn't been generated, generate them now
[[ -f ~/.init-sounds ]] && ~/init-sounds.sh > /dev/null 2>&1 &


log "Writing erlang cookie ..." 
write-erlang-cookie


log "Rewriting kazoo.conf.xml ..."
tee /etc/freeswitch/autoload_configs/kazoo.conf.xml <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<configuration name="kazoo.conf" description="General purpose Erlang C-node produced to better fit the Kazoo project">
    <settings>
        <param name="listen-ip" value="$MOD_KAZOO_LISTEN_IP" />
        <param name="listen-port" value="8031" />
        <param name="cookie-file" value="$HOME/.erlang.cookie" />
        <!--<param name="cookie" value="change_me" />-->
        <param name="shortname" value="false" />
        <param name="nodename" value="freeswitch" />
        <!--<param name="kazoo-var-prefix" value="ecallmgr" />-->
        <!--<param name="compat-rel" value="12"/> -->
        <param name="send-all-headers" value="$FREESWITCH_SEND_ALL_HEADERS" />
    </settings>
</configuration>
EOF


log "Setting $app log level $FREESWITCH_LOG_LEVEL ..."
tee /etc/freeswitch/autoload_configs/console.conf.xml <<EOF
<configuration name="console.conf" description="Console Logger">
    <settings>
        <param name="colorize" value="$FREESWITCH_LOG_COLOR"/>
        <param name="loglevel" value="${FREESWITCH_LOG_LEVEL,,}"/>
    </settings>
    <mappings>
        <map name="all" value="console,debug,info,notice,warning,err,crit,alert"/>
    </mappings>
</configuration>
EOF


log "Writing event-socket ACL ..."
tee /etc/freeswitch/autoload_configs/event-socket-acl.conf.xml <<EOF
<configuration name="acl.conf" description="ACL for Event Socket Access">
  <network-lists>
    <list name="event-socket-allow" default="deny">
      <node type="allow" cidr="127.0.0.0/8"/>
      <node type="allow" cidr="::1/128"/>
      <node type="allow" cidr="192.168.0.0/16"/>
      <node type="allow" cidr="172.16.0.0/12"/>
      <node type="allow" cidr="100.64.0.0/10"/>
      <node type="allow" cidr="10.0.0.0/8"/>
      <node type="allow" cidr="fe80::/10"/>
    </list>
  </network-lists>
</configuration>
EOF


log "Rewriting event_socket config ..."
cat <<EOF > /etc/freeswitch/autoload_configs/event_socket.conf.xml
<configuration name="event_socket.conf" description="Socket Client">
    <settings>
        <param name="nat-map" value="false"/>
        <param name="listen-ip" value="$FREESWITCH_EVENT_SOCKET_LISTEN_IP"/>
        <param name="listen-port" value="8021"/>
        <param name="password" value="$FREESWITCH_EVENT_SOCKET_PASSWORD"/>
        <param name="apply-inbound-acl" value="event-socket-allow"/>
    </settings>
</configuration>
EOF

[[ -z $FREESWITCH_EVENT_SOCKET_PASSWORD ]] && sed -i '/password/d' /etc/freeswitch/autoload_configs/event_socket.conf.xml
cat /etc/freeswitch/autoload_configs/event_socket.conf.xml


log "Writing /etc/fs_cli.conf ..."
cat <<EOF > /etc/fs_cli.conf
[default]
;loglevel => $FREESWITCH_LOG_LEVEL
host     => $(if [[ $FREESWITCH_EVENT_SOCKET_LISTEN_IP = '0.0.0.0' ]]; then echo '127.0.0.1'; else echo "$FREESWITCH_EVENT_SOCKET_LISTEN_IP"; fi)
port     => 8021
password => $FREESWITCH_EVENT_SOCKET_PASSWORD
EOF
[[ -z $FREESWITCH_EVENT_SOCKET_PASSWORD ]] && sed -i '/password/d' /etc/fs_cli.conf
cat /etc/fs_cli.conf


log "Setting tls settings ..."
sed -i "/\"tls\"/s/value=\".*\"/value=\"$FREESWITCH_ENABLE_TLS\"/" /etc/freeswitch/sip_profiles/sipinterface_1.xml
grep '"tls"' $_


log "Setting RTP Port Range Min/Max on switch.conf.xml ..."
sed -i "/rtp-start-port/s/value=\".*\"/value=\"$FREESWITCH_RTP_START_PORT\"/" /etc/freeswitch/autoload_configs/switch.conf.xml
sed -i "/rtp-end-port/s/value=\".*\"/value=\"$FREESWITCH_RTP_END_PORT\"/" $_
grep 'rtp-' $_


if [[ $FREESWITCH_CAPTURE_SERVER = true ]]
then
    log "Enabling capture server ..."
    sed -i "/global_settings/a \
        \       <param name=\"capture-server\" value=\"udp:${FREESWITCH_CAPTURE_IP}:9060;hep=3;capture_id=200\"/>" /etc/freeswitch/autoload_configs/sofia.conf.xml 
    grep capture-server $_

    sed -i "/<!-- SIP -->/a \
        \       <param name=\"sip-capture\" value=\"yes\"/>" /etc/freeswitch/sip_profiles/sipinterface_1.xml
    grep sip-capture $_
fi


log "Ensuring volume contained dirs ..."
mkdir -p /volumes/freeswitch/{recordings,storage}

log "Ensuring ramfs directories ..."
mkdir -p /volumes/ram/{log,run,db,cache,http_cache}


log "Ensuring permissions ..."
chown -R $user:$user ~ /etc/freeswitch /var/lib/freeswitch /volumes/ram
chmod -R 0777 \
    /var/lib/freeswitch \
    /volumes/ram \
    /volumes/freeswitch/{recordings,storage} \
    /tmp/freeswitch


log "Applying performance enhancements ..."
if capsh --supports=cap_sys_resource
then
    log "Setting ulimits ..."
    ulimit -c unlimited # max core files size
    ulimit -d unlimited # max proc data segment size
    ulimit -f unlimited # max file size
    ulimit -l unlimited # max locked memory size
    ulimit -n 999999    # max file descriptors
    ulimit -m unlimited # max memory size
    ulimit -s 240    # max stack size
    ulimit -H -s 240    # max stack size hard
    ulimit -t unlimited # max cpu time
    ulimit -u unlimited # max procs
    ulimit -v unlimited # max virtual memory size
    ulimit -e 31        # max scheduling priority
    ulimit -x unlimited # max file locks
    ulimit -i unlimited # max pending signals
    ulimit -q unlimited # max msg queue size
    ulimit -r 70        # max realtime priority
    ulimit -a
else
    errlog "Capability to set resource limits is restricted in this container. For best performance please run container with --cap-add SYS_RESOURCE"
fi

if capsh --supports=cap_sys_nice
then
    log "Setting nice level to -11 ..."
    renice -11 $$
else
    errlog "Capability to set nice level is restricted in this container. For best performance please run container with --cap-add SYS_NICE"
fi

if ! capsh --supports=cap_net_raw
then
    errlog "Ability to use raw sockets restricted in container. For best performance please run container with --cap-add NET_RAW"
fi


log "Building arguments ..."
[[ $FREESWITCH_DISABLE_NAT_DETECTION = true ]] && nonat_args='-nonat'

cd ~
    log "Starting $app ..."
    gosu $user epmd -daemon

    exec freeswitch -c -rp -nf -u $user -g $user $nonat_args 2>&1
